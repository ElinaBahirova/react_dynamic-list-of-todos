{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","classNames","TodoFilter","query","setFilter","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","unsetSelectedTodo","useState","name","email","phone","user","setUser","loading","setLoading","useEffect","userId","selectedUser","href","App","setTodos","setSelectedTodo","todoSelected","setTodoSelected","filterBy","setFilterBy","todosAPI","visibleTodos","filter","toLocaleLowerCase","includes","toLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.358a00f9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectTodo: (id: Todo) => void;\n  selectedTodo: Todo;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={\n            selectedTodo === todo ? 'has-background-info-light' : ''\n          }\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          )\n            : <td className=\"is-vcentered\" />}\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  { 'fa-eye': selectedTodo !== todo },\n                  { 'fa-eye-slash': selectedTodo === todo },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  setFilter: (filter: string) => void;\n  setQuery: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ query, setFilter, setQuery }) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={query}\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      { query !== '' && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  unsetSelectedTodo: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, unsetSelectedTodo }) => {\n  const [user, setUser] = useState({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(selectedUser => setUser(selectedUser))\n      .then(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => unsetSelectedTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              )\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([{\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n  const [todoSelected, setTodoSelected] = useState(false);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(todosAPI => setTodos(todosAPI))\n      .then(() => setLoading(false));\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setTodoSelected(true);\n  };\n\n  const unsetSelectedTodo = () => {\n    setTodoSelected(false);\n    setSelectedTodo({\n      id: 0,\n      title: '',\n      completed: false,\n      userId: 0,\n    });\n  };\n\n  const setFilter = (filter: string) => {\n    setFilterBy(filter);\n  };\n\n  const setQueryFilter = (value: string) => {\n    setQuery(value);\n  };\n\n  const visibleTodos = todos.filter((todo) => {\n    switch (filterBy) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return true;\n    }\n  }).filter((todo) => {\n    return todo.title.toLocaleLowerCase().includes(query.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilter={setFilter} setQuery={setQueryFilter} query={query} />\n            </div>\n\n            <div className=\"block\">\n              { loading ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={selectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoSelected && (\n        <TodoModal todo={selectedTodo} unsetSelectedTodo={unsetSelectedTodo} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}