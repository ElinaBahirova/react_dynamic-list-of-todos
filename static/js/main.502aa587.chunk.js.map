{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/Filter.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onFilterSelect","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","Loader","defaultUser","name","email","phone","TodoModal","unsetSelectedTodo","useState","user","setUser","loading","setLoading","useEffect","userId","selectedUser","href","defaultTodo","App","setTodos","setSelectedTodo","todoSelected","setTodoSelected","All","filterBy","setFilterBy","todosAPI","visibleTodos","filter","Active","Completed","toLocaleLowerCase","includes","toLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.502aa587.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectTodo: (id: Todo) => void;\n  selectedTodo: Todo;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo === todo },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed\n            ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            )\n            : <td className=\"is-vcentered\" />}\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  {\n                    'fa-eye': selectedTodo !== todo,\n                    'fa-eye-slash': selectedTodo === todo,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  query: string;\n  onFilterSelect: (filter: Filter) => void;\n  setQuery: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onFilterSelect,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onFilterSelect(event.target.value as Filter)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={query}\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      { query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  unsetSelectedTodo: () => void,\n}\n\nconst defaultUser = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, unsetSelectedTodo }) => {\n  const [user, setUser] = useState(defaultUser);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(selectedUser => setUser(selectedUser))\n      .then(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => unsetSelectedTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              )\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nconst defaultTodo: Todo = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([defaultTodo]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState(defaultTodo);\n  const [todoSelected, setTodoSelected] = useState(false);\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(todosAPI => setTodos(todosAPI))\n      .then(() => setLoading(false));\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setTodoSelected(true);\n  };\n\n  const unsetSelectedTodo = () => {\n    setTodoSelected(false);\n    setSelectedTodo(defaultTodo);\n  };\n\n  const setFilter = (filter: Filter) => {\n    setFilterBy(filter);\n  };\n\n  const setQueryFilter = (value: string) => {\n    setQuery(value);\n  };\n\n  const visibleTodos = todos.filter((todo) => {\n    switch (filterBy) {\n      case Filter.Active:\n        return !todo.completed;\n      case Filter.Completed:\n        return todo.completed;\n      default:\n        return true;\n    }\n  }).filter((todo) => {\n    return todo.title.toLocaleLowerCase().includes(query.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterSelect={setFilter}\n                setQuery={setQueryFilter}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              { loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={selectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoSelected && (\n        <TodoModal todo={selectedTodo} unsetSelectedTodo={unsetSelectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}